///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace EMSTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddEmployee recording.
    /// </summary>
    [TestModule("233aa790-790b-46d0-94a5-78e0191dc9f6", ModuleType.Recording, 1)]
    public partial class AddEmployee : ITestModule
    {
        /// <summary>
        /// Holds an instance of the EMSTestRepository repository.
        /// </summary>
        public static EMSTestRepository repo = EMSTestRepository.Instance;

        static AddEmployee instance = new AddEmployee();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddEmployee()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddEmployee Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HomePageEMSWeb.Employee' at 44;14.", repo.HomePageEMSWeb.EmployeeInfo, new RecordItemIndex(0));
            repo.HomePageEMSWeb.Employee.Click("44;14");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HomePageEMSWeb.CRUDOperations.BtnAddNew' at 78;12.", repo.HomePageEMSWeb.CRUDOperations.BtnAddNewInfo, new RecordItemIndex(1));
            repo.HomePageEMSWeb.CRUDOperations.BtnAddNew.Click("78;12");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HomePageEMSWeb.Name' at 84;18.", repo.HomePageEMSWeb.NameInfo, new RecordItemIndex(2));
            repo.HomePageEMSWeb.Name.Click("84;18");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'abcdefg' with focus on 'HomePageEMSWeb.Name'.", repo.HomePageEMSWeb.NameInfo, new RecordItemIndex(3));
            repo.HomePageEMSWeb.Name.PressKeys("abcdefg");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HomePageEMSWeb.Position' at 47;16.", repo.HomePageEMSWeb.PositionInfo, new RecordItemIndex(4));
            repo.HomePageEMSWeb.Position.Click("47;16");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'qwerty' with focus on 'HomePageEMSWeb.Position'.", repo.HomePageEMSWeb.PositionInfo, new RecordItemIndex(5));
            repo.HomePageEMSWeb.Position.PressKeys("qwerty");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HomePageEMSWeb.Salary' at 62;16.", repo.HomePageEMSWeb.SalaryInfo, new RecordItemIndex(6));
            repo.HomePageEMSWeb.Salary.Click("62;16");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '15' with focus on 'HomePageEMSWeb.Salary'.", repo.HomePageEMSWeb.SalaryInfo, new RecordItemIndex(7));
            repo.HomePageEMSWeb.Salary.PressKeys("15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HomePageEMSWeb.CRUDOperations.BtnAdd' at 85;17.", repo.HomePageEMSWeb.CRUDOperations.BtnAddInfo, new RecordItemIndex(8));
            repo.HomePageEMSWeb.CRUDOperations.BtnAdd.Click("85;17");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Employee added successfully') on item 'HomePageEMSWeb.CRUDOperations.EmployeeAddedSuccessfully'.", repo.HomePageEMSWeb.CRUDOperations.EmployeeAddedSuccessfullyInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.HomePageEMSWeb.CRUDOperations.EmployeeAddedSuccessfullyInfo, "InnerText", "Employee added successfully");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
